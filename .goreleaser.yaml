before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    - go test -count=1 -v ./...
builds:
  - main: ./cmd/wait-for-mcp
    id: "wait-for-mcp"
    binary: wait-for-mcp
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
  - main: ./cmd/mco-builder
    id: "mco-builder"
    binary: mco-builder
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
  - main: ./cmd/mco-push
    id: "mco-push"
    binary: mco-push
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
  - main: ./cmd/cluster-lifecycle
    id: "cluster-lifecycle"
    binary: cluster-lifecycle
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
  - main: ./cmd/onclustertesting
    id: "onclustertesting"
    binary: onclustertesting
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
    - goos: windows
      format: zip
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
